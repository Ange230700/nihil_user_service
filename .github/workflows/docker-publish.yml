# user\.github\workflows\docker-publish.yml

name: Docker Publish

on:
  push:
    branches: [main]
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      clear_cache:
        description: "Force clear Buildx cache for this run"
        type: boolean
        default: false
        required: false

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    env:
      # Default cache scope is the branch; if clear_cache is true,
      # append run_id to create a fresh, unique cache namespace.
      CACHE_SCOPE: ${{ inputs.clear_cache && format('{0}-{1}', github.ref_name, github.run_id) || github.ref_name }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=sha
            type=ref,event=branch
            type=semver,pattern={{version}}

      # Optional: also wipe the local Buildx cache on this runner when requested
      - name: Prune local Buildx cache (on-demand)
        if: ${{ inputs.clear_cache == true }}
        run: docker buildx prune --all --force

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=${{ env.CACHE_SCOPE }}
          cache-to: type=gha,mode=max,scope=${{ env.CACHE_SCOPE }}
